{"name":"Errbit","tagline":"The open source error catcher that's Airbrake API compliant","body":"# Errbit [![TravisCI][travis-img-url]][travis-ci-url] [![Code Climate][codeclimate-img-url]][codeclimate-url]\r\n\r\n[travis-img-url]: https://secure.travis-ci.org/errbit/errbit.png?branch=master\r\n[travis-ci-url]: http://travis-ci.org/errbit/errbit\r\n[codeclimate-img-url]: https://codeclimate.com/badge.png\r\n[codeclimate-url]: https://codeclimate.com/github/errbit/errbit\r\n\r\n\r\n### The open source, self-hosted error catcher\r\n\r\n\r\nErrbit is a tool for collecting and managing errors from other applications.\r\nIt is [Airbrake](http://airbrakeapp.com) (formerly known as Hoptoad) API compliant,\r\nso if you are already using Airbrake, you can just point the `airbrake` gem to your Errbit server.\r\n\r\n\r\n<table>\r\n  <tr>\r\n    <td align=\"center\">\r\n      <a href=\"http://errbit.github.com/errbit/images/apps.png\" target=\"_blank\" title=\"Apps\">\r\n        <img src=\"http://errbit.github.com/errbit/images/apps_thumb.png\" alt=\"Apps\">\r\n      </a>\r\n      <br />\r\n      <em>Apps</em>\r\n    </td>\r\n    <td align=\"center\">\r\n      <a href=\"http://errbit.github.com/errbit/images/app_errors.png\" target=\"_blank\" title=\"Errors\">\r\n        <img src=\"http://errbit.github.com/errbit/images/app_errors_thumb.png\" alt=\"Errors\">\r\n      </a>\r\n      <br />\r\n      <em>Errors</em>\r\n    </td>\r\n    <td align=\"center\">\r\n      <a href=\"http://errbit.github.com/errbit/images/error_summary.png\" target=\"_blank\" title=\"Error Summary\">\r\n        <img src=\"http://errbit.github.com/errbit/images/error_summary_thumb.png\" alt=\"Error Summary\">\r\n      </a>\r\n      <br />\r\n      <em>Error Summary</em>\r\n    </td>\r\n    <td align=\"center\">\r\n      <a href=\"http://errbit.github.com/errbit/images/error_backtrace.png\" target=\"_blank\" title=\"Error Backtraces\">\r\n        <img src=\"http://errbit.github.com/errbit/images/error_backtrace_thumb.png\" alt=\"Error Backtraces\">\r\n      </a>\r\n      <br />\r\n      <em>Error Backtraces</em>\r\n    </td>\r\n  </tr>\r\n</table>\r\n\r\n\r\nErrbit may be a good fit for you if:\r\n\r\n* Your exceptions may contain sensitive data that you don't want sitting on someone else's server\r\n* Your application is behind a firewall\r\n* You'd like to brand your error catcher\r\n* You want to add customer features to your error catcher\r\n* You're crazy and love managing servers\r\n\r\nIf this doesn't sound like you, you should probably stick with [Airbrake](http://airbrakeapp.com).\r\nThe [Thoughtbot](http://thoughtbot.com) guys offer great support for it and it is much more worry-free.\r\nThey have a free package and even offer a *\"Airbrake behind your firewall\"* solution.\r\n\r\nMailing List\r\n------------\r\n\r\nJoin the Google Group at https://groups.google.com/group/errbit to receive updates and notifications.\r\n\r\nDemo\r\n----\r\n\r\nThere is a demo available at [http://errbit-demo.herokuapp.com/](http://errbit-demo.herokuapp.com/)\r\n\r\nEmail: demo@errbit-demo.herokuapp.com<br/>\r\nPassword: password\r\n\r\nInstallation\r\n------------\r\n\r\n*Note*: This app is intended for people with experience deploying and maintining\r\nRails applications. If you're uncomfortable with any step below then Errbit is not\r\nfor you. Checkout [Airbrake](http://airbrakeapp.com) from the guys over at\r\n[Thoughtbot](http://thoughtbot.com), which Errbit is based on.\r\n\r\n**Set up your local box or server(Ubuntu):**\r\n\r\n  * Install MongoDB. Follow the directions [here](http://www.mongodb.org/display/DOCS/Ubuntu+and+Debian+packages), then:\r\n\r\n```bash\r\napt-get update\r\napt-get install mongodb-10gen\r\n```\r\n\r\n  * Install libxml and libcurl\r\n\r\n```bash\r\napt-get install libxml2 libxml2-dev libxslt-dev libcurl4-openssl-dev\r\n```\r\n\r\n  * Install Bundler\r\n\r\n```bash\r\ngem install bundler\r\n```\r\n\r\n**Running Locally:**\r\n\r\n  * Install dependencies\r\n\r\n```bash\r\nbundle install\r\n```\r\n\r\n  * Bootstrap Errbit. This will copy over config.yml and also seed the database.\r\n\r\n```bash\r\nrake errbit:bootstrap\r\n```\r\n\r\n  * Update the config.yml and mongoid.yml files with information about your environment\r\n\r\n  * Start Server\r\n\r\n```bash\r\nscript/rails server\r\n```\r\n\r\nDeploying:\r\n----------\r\n\r\n  * Copy `config/deploy.example.rb` to `config/deploy.rb`\r\n  * Update the `deploy.rb` or `config.yml` file with information about your server\r\n  * Setup server and deploy\r\n\r\n```bash\r\ncap deploy:setup deploy\r\n```\r\n\r\n(Note: The capistrano deploy script will automatically generate a unique secret token.)\r\n\r\n**Deploying to Heroku:**\r\n\r\n  * Clone the repository\r\n\r\n```bash\r\ngit clone http://github.com/errbit/errbit.git\r\n```\r\n\r\n  * Create & configure for Heroku\r\n\r\n```bash\r\ngem install heroku\r\nheroku create example-errbit --stack cedar\r\nheroku addons:add mongolab:starter\r\nheroku addons:add sendgrid:starter\r\nheroku config:add HEROKU=true\r\nheroku config:add SECRET_TOKEN=\"$(bundle exec rake secret)\"\r\nheroku config:add ERRBIT_HOST=some-hostname.example.com\r\nheroku config:add ERRBIT_EMAIL_FROM=example@example.com\r\ngit push heroku master\r\n```\r\n\r\n  * Seed the DB (_NOTE_: No bootstrap task is used on Heroku!)\r\n\r\n```bash\r\nheroku run rake db:seed\r\n```\r\n\r\n  * If you are using a free database on Heroku, you may want to periodically clear resolved errors to free up space.\r\n\r\n    * With the heroku-scheduler add-on (replacement for cron):\r\n\r\n    ```bash\r\n    # Install the heroku scheduler add-on\r\n    heroku addons:add scheduler:standard\r\n\r\n    # Go open the dashboard to schedule the job.  You should use\r\n    # 'rake errbit:db:clear_resolved' as the task command, and schedule it\r\n    # at whatever frequency you like (once/day should work great).\r\n    heroku addons:open scheduler\r\n    ```\r\n\r\n    * With the cron add-on:\r\n\r\n    ```bash\r\n    # Install the heroku cron addon, to clear resolved errors daily:\r\n    heroku addons:add cron:daily\r\n    ```\r\n\r\n    * Or clear resolved errors manually:\r\n\r\n    ```bash\r\n    heroku run rake errbit:db:clear_resolved\r\n    ```\r\n\r\n  * You may want to enable the deployment hook for heroku :\r\n\r\n```bash\r\nheroku addons:add deployhooks:http --url=\"http://YOUR_ERRBIT_HOST/deploys.txt?api_key=YOUR_API_KEY\"\r\n```\r\n\r\n  * You may also want to configure a different secret token for each deploy:\r\n\r\n```bash\r\nheroku config:add SECRET_TOKEN=some-secret-token\r\n```\r\n\r\n  * Enjoy!\r\n\r\n\r\nAuthentication\r\n--------------\r\n\r\n### Configuring GitHub authentication:\r\n\r\n  * In `config/config.yml`, set `github_authentication` to `true`\r\n  * Register your instance of Errbit at: https://github.com/settings/applications\r\n\r\nIf you hosted Errbit at errbit.example.com, you would fill in:\r\n\r\n<table>\r\n  <tr><th>URL:</th><td>http://errbit.example.com/</td></tr>\r\n  <tr><th>Callback URL:</th><td>http://errbit.example.com/users/auth/github</td></tr>\r\n</table>\r\n\r\n  * After you have registered your app, set `github_client_id` and `github_secret`\r\n    in `config/config.yml` with your app's Client ID and Secret key.\r\n\r\n\r\nAfter you have followed these instructions, you will be able to **Sign in with GitHub** on the Login page.\r\n\r\nYou will also be able to link your GitHub profile to your user account on your **Edit profile** page.\r\n\r\nIf you have signed in with GitHub, or linked your GitHub profile, and the App has a GitHub repo configured,\r\nthen you will be able to create issues on GitHub.\r\nYou will still be able to create an issue on the App's configured issue tracker.\r\n\r\nYou can change the requested account permissions by setting `github_access_scope` to:\r\n\r\n<table>\r\n  <tr><th>['repo'] </th><td>Allow creating issues for public and private repos.</td></tr>\r\n  <tr><th>['public_repo'] </th><td>Only allow creating issues for public repos.</td></tr>\r\n  <tr><th>[] </th><td>No permission to create issues on any repos.</td></tr>\r\n</table>\r\n\r\n\r\n### GitHub authentication when served on Heroku\r\n\r\nYou will need to set up Heroku variables accordingly as described in [Configuring GitHub authentication](#configuring-github-authentication):\r\n\r\n* GITHUB_AUTHENTICATION\r\n\r\n```bash\r\nheroku config:add GITHUB_AUTHENTICATION=true\r\n```\r\n\r\n* GITHUB_CLIENT_ID\r\n\r\n```bash\r\nheroku config:add GITHUB_CLIENT_ID=the_client_id_provided_by_GitHub\r\n```\r\n\r\n* GITHUB_SECRET\r\n\r\n```bash\r\nheroku config:add GITHUB_SECRET=the_secret_provided_by_GitHub\r\n```\r\n\r\n* GITHUB_ACCESS_SCOPE - set only one scope `repo` or `public_repo`. If you really need to put more than one, separate them with comma.\r\n\r\n```bash\r\nheroku config:add GITHUB_ACCESS_SCOPE=repo,public_repo\r\n```\r\n\r\n__Note__: To avoid restarting your Heroku app 4 times you can set Heroku variables in a single command, i.e:\r\n\r\n```bash\r\nheroku config:add GITHUB_AUTHENTICATION=true \\\r\nGITHUB_CLIENT_ID=the_client_id_provided_by_GitHub \\\r\nGITHUB_SECRET=the_secret_provided_by_GitHub \\\r\nGITHUB_ACCESS_SCOPE=repo,public_repo\r\n```\r\n\r\n### Configuring LDAP authentication:\r\n\r\n  * In `config/config.yml`, set `user_has_username` to `true`\r\n  * Follow the instructions at https://github.com/cschiewek/devise_ldap_authenticatable\r\n  to set up the devise_ldap_authenticatable gem.\r\n  * Ensure to set ```config.ldap_create_user = true``` in ```config/initializers/devise.rb```, this enables creating the users from LDAP, otherwhise login will not work.\r\n  * Create a new initializer (e.g. ```config/initializers/devise_ldap.rb```) and add the following code to enable ldap authentication in the User-model:\r\n```ruby\r\nErrbit::Config.devise_modules << :ldap_authenticatable\r\n```\r\n\r\n  * If you are authenticating by `username`, you will need to set the user's email manually\r\n  before authentication. You must add the following lines to `app/models/user.rb`:\r\n\r\n```ruby\r\n  before_save :set_ldap_email\r\n  def set_ldap_email\r\n    self.email = Devise::LdapAdapter.get_ldap_param(self.username, \"mail\")\r\n  end\r\n```\r\n\r\n  * Now login with your user from LDAP, this will create a user in the database\r\n  * Open a rails console and set the admin flag for your user:\r\n\r\n```ruby\r\nuser = User.first\r\nuser.admin = true\r\nuser.save!\r\n```\r\n\r\nUpgrading\r\n---------\r\nWhen upgrading Errbit, please run:\r\n\r\n```bash\r\ngit pull origin master # assuming origin is the github.com/errbit/errbit repo\r\nbundle install\r\nrake db:migrate\r\n```\r\n\r\nIf we change the way that data is stored, this will run any migrations to bring your database up to date.\r\n\r\n\r\nUser information in error reports\r\n---------------------------------\r\n\r\nErrbit can now display information about the user who experienced an error.\r\nThis gives you the ability to ask the user for more information,\r\nand let them know when you've fixed the bug.\r\n\r\nIf you would like to include information about the current user in your error reports,\r\nyou can replace the `airbrake` gem in your Gemfile with `airbrake_user_attributes`,\r\nwhich wraps the `airbrake` gem and injects user information.\r\nIt will inject information about the current user into the error report\r\nif your Rails app's controller responds to a `#current_user` method.\r\nThe user's attributes are filtered to remove authentication fields.\r\n\r\nIf user information is received with an error report,\r\nit will be displayed under the *User Details* tab:\r\n\r\n\r\n![User details tab](http://errbit.github.com/errbit/images/error_user_information.png)\r\n\r\n(This tab will be hidden if no user information is available.)\r\n\r\n\r\nIssue Trackers\r\n--------------\r\n\r\n**Lighthouseapp Integration**\r\n\r\n* Account is the name of your subdomain, i.e. **litcafe** for project at http://litcafe.lighthouseapp.com/projects/73466-face/overview\r\n* Errbit uses token-based authentication. Get your API Token or visit [http://help.lighthouseapp.com/kb/api/how-do-i-get-an-api-token](http://help.lighthouseapp.com/kb/api/how-do-i-get-an-api-token) to learn how to get it.\r\n* Project id is number identifier of your project, i.e. **73466** for project at http://litcafe.lighthouseapp.com/projects/73466-face/overview\r\n\r\n**Redmine Integration**\r\n\r\n* Account is the host of your redmine installation, i.e. **http://redmine.org**\r\n* Errbit uses token-based authentication. Get your API Key or visit [http://www.redmine.org/projects/redmine/wiki/Rest_api#Authentication](http://www.redmine.org/projects/redmine/wiki/Rest_api#Authentication) to learn how to get it.\r\n* Project id is an identifier of your project, i.e. **chilliproject** for project at http://www.redmine.org/projects/chilliproject\r\n\r\n**Pivotal Tracker Integration**\r\n\r\n* Errbit uses token-based authentication. Get your API Key or visit [http://www.pivotaltracker.com/help/api](http://www.pivotaltracker.com/help/api) to learn how to get it.\r\n* Project id is an identifier of your project, i.e. **24324** for project at http://www.pivotaltracker.com/projects/24324\r\n\r\n**Thoughtworks Mingle Integration**\r\n\r\n* Account is the host of your mingle installation. i.e. **https://mingle.example.com**  *note*: You should use SSL if possible.\r\n* Errbit uses 'sign-in name' & password authentication. You may want to set up an **errbit** user with limited rights.\r\n* Project id is the identifier of your project, i.e. **awesomeapp** for project at https://mingle.example.com/projects/awesomeapp\r\n* Card properties are comma separated key value pairs. You must specify a 'card_type', but anything else is optional, e.g.:\r\n\r\n```\r\ncard_type = Defect, status = Open, priority = Essential\r\n```\r\n\r\n**GitHub Issues Integration**\r\n\r\n* For 'Account/Repository', the account will either be a username or organization. i.e. **errbit/errbit**\r\n* You will also need to provide your username and password for your GitHub account.\r\n  * (We'd really appreciate it if you wanted to help us implement OAuth instead!)\r\n\r\n**Bitbucket Issues Integration**\r\n\r\n* For 'BITBUCKET REPO' field, the account will either be a username or organization. i.e. **errbit/errbit**\r\n* You will also need to provide your username and password for your Bitbucket account.\r\n\r\n**Gitlab Issues Integration**\r\n\r\n* Account is the host of your gitlab installation. i.e. **http://gitlab.example.com**\r\n* To authenticate, Errbit uses token-based authentication. Get your API Key in your user settings (or create special user for this purpose)\r\n* You also need to provide project ID (it needs to be Number) for issues to be created\r\n\r\n\r\nWhat if Errbit has an error?\r\n----------------------------\r\n\r\nErrbit will log it's own errors to an internal app named **Self.Errbit**.\r\nThe **Self.Errbit** app will be automatically created whenever the first error happens.\r\n\r\nIf your Errbit instance has logged an error, we would appreciate a bug report on GitHub Issues.\r\nYou can post this manually at [https://github.com/errbit/errbit/issues](https://github.com/errbit/errbit/issues),\r\nor you can set up the GitHub Issues tracker for your **Self.Errbit** app:\r\n\r\n  * Go to the **Self.Errbit** app's edit page. If that app does not exist yet, go to the apps page and click **Add a new App** to create it. (You can also create it by running `rake airbrake:test`.)\r\n\r\n  * In the **Issue Tracker** section, click **GitHub Issues**.\r\n\r\n  * Fill in the **Account/Repository** field with **errbit/errbit**.\r\n\r\n  * Fill in the **Username** field with your github username.\r\n\r\n  * If you are logged in on [GitHub](https://github.com), you can find your **API Token** on this page: [https://github.com/account/admin](https://github.com/account/admin).\r\n\r\n  * Save the settings by clicking **Update App** (or **Add App**)\r\n\r\n  * You can now easily post bug reports to GitHub Issues by clicking the **Create Issue** button on a **Self.Errbit** error.\r\n\r\n\r\nUse Errbit with applications written in other languages\r\n-------------------------------------------------------\r\n\r\nIn theory, any Airbrake-compatible error catcher for other languages should work with Errbit.\r\nSolutions known to work are listed below:\r\n\r\n<table>\r\n  <tr>\r\n    <th>PHP (&gt;= 5.3)</th>\r\n    <td>https://github.com/flippa/errbit-php</td>\r\n  </tr>\r\n  <tr>\r\n    <th>Python</th>\r\n    <td>https://github.com/mkorenkov/errbit.py , https://github.com/pulseenergy/airbrakepy</td>\r\n  </tr>\r\n</table>\r\n\r\nTODO\r\n----\r\n\r\n* Add ability for watchers to be configured for types of notifications they should receive\r\n\r\n\r\nPeople using Errbit\r\n-------------------\r\n\r\nSee our wiki page for a [list of people and companies around the world who use Errbit](https://github.com/errbit/errbit/wiki/People-using-Errbit).\r\nFeel free to [edit this page](https://github.com/errbit/errbit/wiki/People-using-Errbit/_edit), and add your name and country to the list if you are using Errbit.\r\n\r\n\r\nSpecial Thanks\r\n--------------\r\n\r\n* [Michael Parenteau](http://michaelparenteau.com) - For rocking the Errbit design and providing a great user experience.\r\n* [Nick Recobra (@oruen)](https://github.com/oruen) - Nick is Errbit's first core contributor. He's been working hard at making Errbit more awesome.\r\n* [Nathan Broadbent (@ndbroadbent)](https://github.com/ndbroadbent) - Maintaining Errbit and contributing many features\r\n* [Vasiliy Ermolovich (@nashby)](https://github.com/nashby) - Contributing and helping to resolve issues and pull requests\r\n* [Marcin Ciunelis (@martinciu)](https://github.com/martinciu) - Helping to improve Errbit's architecture\r\n* [Relevance](http://thinkrelevance.com) - For giving me Open-source Fridays to work on Errbit and all my awesome co-workers for giving feedback and inspiration.\r\n* [Thoughtbot](http://thoughtbot.com) - For being great open-source advocates and setting the bar with [Airbrake](http://airbrakeapp.com).\r\n\r\nSee the [contributors graph](https://github.com/errbit/errbit/graphs/contributors) for further details.\r\n\r\n\r\nContributing\r\n------------\r\n\r\nWe welcome any contributions. If you need to tweak Errbit for your organization's needs,\r\nthere are probably other users who will appreciate your work.\r\nPlease try to determine whether or not your feature should be **global** or **optional**,\r\nand make **optional** features configurable via `config/config.yml`.\r\n\r\n**Examples of optional features:**\r\n\r\n* Enable / disable user comments on errors.\r\n* Adding a `username` field to the User model.\r\n\r\n**How to contribute:**\r\n\r\n* Fork the project.\r\n* Make your feature addition or bug fix.\r\n* Add tests for it. This is important so we don't break it in a future version unintentionally.\r\n* Commit, do not mess with Rakefile, version, or history. (if you want to have your own version, that is fine but bump version in a commit by itself we can ignore when we pull)\r\n* Send us a pull request. Bonus points for topic branches.\r\n\r\n\r\nCopyright\r\n---------\r\n\r\nCopyright (c) 2010-2011 Jared Pace. See LICENSE for details.\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}